// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieDemo.Models.DatabaseConnection;

namespace MovieDemo.Migrations
{
    [DbContext(typeof(MovieDemoDataContext))]
    partial class MovieDemoDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieDemo.Models.Entities.AppUser", b =>
                {
                    b.Property<long>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired();

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateLastModified");

                    b.Property<string>("Firstname")
                        .IsRequired();

                    b.Property<long?>("LastModifiedBy");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("MovieDemo.Models.Entities.UserFavouriteMovie", b =>
                {
                    b.Property<long>("UserFavouriteMovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AppUserId");

                    b.Property<long?>("CreatedBy");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateLastModified");

                    b.Property<long?>("LastModifiedBy");

                    b.Property<long>("MovieId");

                    b.HasKey("UserFavouriteMovieId");

                    b.HasIndex("AppUserId");

                    b.ToTable("UserFavouriteMovies");
                });

            modelBuilder.Entity("MovieDemo.Models.Entities.UserFavouriteMovie", b =>
                {
                    b.HasOne("MovieDemo.Models.Entities.AppUser", "AppUser")
                        .WithMany("UserFavouriteMovies")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
